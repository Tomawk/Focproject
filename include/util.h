#include <string>
#include <openssl/dh.h>

struct encdecMsg {
    std::string msg;
    unsigned int msg_size;
    std::string iv; // può andare come stringa? perchè senno potremmo lasciarlo unsigned char *
    unsigned int iv_size;
    encdecMsg() {
        msg = "";
        msg_size = 0;
        iv = "";
        iv_size = 0;
    }
};

// Create a predefined error message that some problem occured in 
// decrypting message 
#define DECRYPT_ERROR \
    encdecMsg error; \
    error.msg = "error"; \
    error.msg_size = 6; \
    return error; 


static DH *get_dh2048(void)
{
    static unsigned char dhp_2048[] = {
        0xCD, 0xC2, 0x8D, 0x71, 0x9F, 0x53, 0x4F, 0x01, 0x09, 0x7B,
        0xE4, 0x38, 0xEA, 0xF9, 0x81, 0x28, 0xFE, 0xBD, 0x6C, 0x0F,
        0x90, 0xCF, 0xF1, 0x5F, 0x3B, 0xA1, 0x97, 0x78, 0x16, 0x6D,
        0x4F, 0xD6, 0x12, 0x03, 0xD9, 0x9A, 0x71, 0x2F, 0xAE, 0x9F,
        0xFC, 0x2C, 0x57, 0xB4, 0x1A, 0x02, 0x2F, 0x85, 0x2B, 0x9E,
        0x27, 0xF5, 0xE5, 0x51, 0x9B, 0xF6, 0x62, 0xCA, 0x49, 0xF8,
        0x0D, 0x95, 0xDD, 0x74, 0xF9, 0xDB, 0x1D, 0xD5, 0x5A, 0xF2,
        0x1D, 0x91, 0x64, 0x76, 0x1C, 0x8B, 0x21, 0xCD, 0x33, 0x7D,
        0xDE, 0x9E, 0x2C, 0xF0, 0x78, 0x73, 0xF0, 0x39, 0x39, 0x25,
        0x58, 0xAD, 0x75, 0x09, 0x7F, 0x60, 0xEC, 0x59, 0xB6, 0x95,
        0x5D, 0xB7, 0x49, 0xE8, 0xF3, 0x4B, 0xB5, 0xEF, 0x3F, 0xFD,
        0xB7, 0x57, 0xB4, 0xFA, 0xB7, 0x52, 0x62, 0x25, 0x93, 0x52,
        0xE2, 0x8E, 0xAA, 0xB2, 0x01, 0xC5, 0x2C, 0x72, 0x34, 0xEC,
        0x16, 0x6B, 0xCC, 0x77, 0x79, 0x76, 0x18, 0x4C, 0x26, 0x13,
        0x19, 0x7D, 0xB5, 0xED, 0xD3, 0xC2, 0x30, 0xE5, 0x01, 0x73,
        0x6A, 0xEE, 0x17, 0x7C, 0x73, 0x52, 0xDB, 0x11, 0xCD, 0x1A,
        0x5A, 0xBB, 0x2A, 0xF5, 0x40, 0xFE, 0x7B, 0x36, 0x9B, 0x34,
        0x3D, 0x61, 0xFA, 0x9C, 0x5B, 0xDB, 0xBF, 0x22, 0xBA, 0x8A,
        0x8A, 0xFB, 0x85, 0x99, 0xDD, 0x77, 0xC8, 0xB9, 0x6A, 0x28,
        0xC1, 0x02, 0x81, 0x55, 0x14, 0x02, 0x10, 0xFF, 0x11, 0xAB,
        0x5D, 0x4B, 0x9C, 0x99, 0xFA, 0x3F, 0xCB, 0xC7, 0xD7, 0xAD,
        0x02, 0x30, 0x23, 0xFD, 0x90, 0x74, 0x2D, 0x11, 0xC3, 0x1F,
        0x17, 0xDF, 0x5C, 0x58, 0x57, 0x7C, 0x0B, 0x4C, 0x9A, 0x56,
        0x21, 0x9C, 0xF9, 0xE6, 0xA6, 0x4D, 0x9E, 0x42, 0x3D, 0x30,
        0xC9, 0xD6, 0x3B, 0x1D, 0x35, 0x78, 0xC1, 0xD7, 0x6E, 0xA5,
        0x6E, 0xA7, 0x6D, 0xA1, 0xE4, 0x13
    };
    static unsigned char dhg_2048[] = {
        0x02
    };
    DH *dh = DH_new();
    BIGNUM *p, *g;

    if (dh == NULL)
        return NULL;
    p = BN_bin2bn(dhp_2048, sizeof(dhp_2048), NULL);
    g = BN_bin2bn(dhg_2048, sizeof(dhg_2048), NULL);
    if (p == NULL || g == NULL
            || !DH_set0_pqg(dh, p, NULL, g)) {
        DH_free(dh);
        BN_free(p);
        BN_free(g);
        return NULL;
    }
    return dh;
}
    